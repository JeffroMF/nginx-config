# Run as a unique & less privileged user for security.
user www-data www-data;

# The file storing the process id.
pid /run/nginx.pid;

# Sets the worker threads to the number of CPU cores available for best performance.
# Should be > the number of CPU cores.
# Max number of connections = worker_processes * worker_connections
worker_processes auto;

# Max number of open files per worker process.
# Should be > worker_connections.
worker_rlimit_nofile 8192;

events {
    # If you need more connections than this, you start optimizing your OS.
    # Should be < worker_rlimit_nofile.
    worker_connections 8000;
}

http {
    # Hide nginx version.
    server_tokens off;

    # Increase types hash table.
    types_hash_max_size 2048;

    # Allow long server name.
    server_names_hash_bucket_size 64;

    # How long each connection to stay idle.
    # Longer values are better for client, particularly for SSL,
    # but that worker connections are tied up longer.
    keepalive_timeout 20s;

    # Speed up file transfers by using sendfile() to copy directly
    # between descriptors rather than using read()/write().
    sendfile on;

    # Don't send out partial frames; this increases throughput
    # since TCP frames are filled up before being sent out.
    tcp_nopush on;

    # Specify mime types for files.
    include mime.types;
    default_type application/octet-stream;

    # Update charset_types to match updated mime.types.
    # text/html is always included by charset module.
    charset_types text/css text/plain text/vnd.wap.wml application/javascript application/json application/rss+xml application/xml;

    # Log format.
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Log files.
    access_log logs/access.log main;
    error_log  logs/error.log warn;

    # Enable gzip compression.
    gzip on;

    # Compression level (1-9).
    # 5 is a perfect compromise between size and CPU usage, offering about
    # 75% reduction for most ASCII files (almost identical to level 9).
    gzip_comp_level 5;

    # Don't compress anything that's already small and unlikely to shrink much
    # if at all (the default is 20 bytes, which is bad as that usually leads to
    # larger files after gzipping).
    gzip_min_length 256;

    # Compress data even for proxied connection.
    gzip_proxied any;

    # Cache both the gzipped and regular version of a resource
    # when Accept-Encoding capabilities header varies.
    gzip_vary on;

    # Compress all of the following mime-types.
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    # Include files in the sites-enabled folder.
    include sites-enabled/*;
}
