server {
    listen 80;
    listen [::]:80;

    # The www and non-www http hostnames.
    server_name example.com www.example.com;

    # Redirect to non-www https hostname.
    return 301 https://example.com$request_uri;
}

server {
    listen 443 ssl spdy;
    listen [::]:443 ssl spdy;

    # The www hostname.
    server_name www.example.com;

    # SSL config file.
    include conf.d/directive-only/ssl.conf;

    # SSL certificate.
    ssl_certificate /etc/nginx/ssl/example.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/example.com/privkey.pem;

    # Enable OCSP stapling.
    include conf.d/directive-only/ssl-stapling.conf;

    # Intermediate certificate.
    ssl_trusted_certificate /etc/nginx/ssl/example.com/chain.pem;

    # Redirect to non-www https hostname.
    return 301 https://example.com$request_uri;
}

server {
    listen 443 ssl spdy;
    listen [::]:443 ssl spdy;

    # The host name.
    server_name example.com;

    # SSL config file.
    include conf.d/directive-only/ssl.conf;

    # SSL certificate.
    ssl_certificate /etc/nginx/ssl/example.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/example.com/privkey.pem;

    # Enable OCSP stapling.
    include conf.d/directive-only/ssl-stapling.conf;

    # Intermediate certificate.
    ssl_trusted_certificate /etc/nginx/ssl/example.com/chain.pem;

    # The root path.
    root /usr/share/nginx/example.com;

    # Specify charset.
    charset utf-8;

    # Index file.
    index index.html index.htm;

    # Try file then directory, or else 404.
    location / {
        try_files $uri $uri/ =404;
    }

    # Custom 404 error page.
    error_page 404 /404.html;

    # Log file path.
    error_log  /etc/nginx/logs/example.com-ssl_error.log warn;
    access_log /etc/nginx/logs/example.com-ssl_access.log main;

    # Include basic config.
    include conf.d/basic.conf;
}
