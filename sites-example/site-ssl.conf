server {
    listen 80;
    listen [::]:80;

    # The www and non-www host server name.
    server_name example.com www.example.com;

    # Redirect to the non-www HTTPS version.
    return 301 https://example.com$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # The www host server name.
    server_name www.example.com;

    # SSL certificate file.
    ssl_certificate ssl/example.com/fullchain.pem;

    # SSL certificate secret key file.
    ssl_certificate_key ssl/example.com/privkey.pem;

    # SSL trusted CA certificate file for OCSP stapling.
    ssl_trusted_certificate ssl/example.com/chain.pem;

    # Include the SSL configuration.
    include snippets/directive/ssl.conf;

    # Redirect to the non-www HTTPS version.
    return 301 https://example.com$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # The non-www host server name.
    server_name example.com;

    # The document root path.
    root /var/www/example.com/public;

    # The charset.
    charset utf-8;

    # Files that will be used as index.
    index index.html index.htm;

    location / {
        # First attempt to serve request as a file, then as a directory, then
        # fallback to display 404 Not Found.
        try_files $uri $uri/ =404;
    }

    # Custom 404 page.
    error_page 404 /404.html;

    # Log configuration.
    error_log /etc/nginx/logs/example.com_error.log error;
    access_log /etc/nginx/logs/example.com_access.log main;

    # SSL certificate file.
    ssl_certificate ssl/example.com/fullchain.pem;

    # SSL certificate secret key file.
    ssl_certificate_key ssl/example.com/privkey.pem;

    # SSL trusted CA certificate file for OCSP stapling.
    ssl_trusted_certificate ssl/example.com/chain.pem;

    # Include the SSL configuration.
    include snippets/directive/ssl.conf;

    # Include basic configuration.
    include snippets/basic.conf;
}
